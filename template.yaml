AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sample-aws-sam

  SAM Template for sample-aws-sam

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10

Resources:
  DefaultFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
        - Statement:
            - Sid: SSMDescribeParametersPolicy
              Effect: Allow
              Action:
                - ssm:DescribeParameters
              Resource: "*"
            - Sid: SSMGetParameterPolicy
              Effect: Allow
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
              Resource: "*"
            - Sid: EC2ReadOnlyAccessPolicy
              Effect: Allow
              Action:
                - ec2:Describe*
              Resource: "*"
      Environment:
        Variables:
          TZ: Asia/Tokyo
      # Events:
      #   Default:
      #     Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
      #     Properties:
      #       Path: /
      #       Method: get
  DefaultLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref DefaultFunction
      Principal: apigateway.amazonaws.com
  DefaultApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: "2.0"
        info:
          title: !Ref DefaultFunction
        schemes:
          - https
        paths:
          /:
            get:
              summary: ""
              description: ""
              produces:
                - "application/json"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DefaultFunction.Arn}/invocations
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                contentHandling: "CONVERT_TO_TEXT"
                type: "aws_proxy"
        x-amazon-apigateway-policy:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: execute-api:Invoke
              Resource:
                - "execute-api:/*"
              Condition:
                IpAddress:
                  aws:SourceIp:
                    - "0.0.0.0/0"
  DefaultLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${DefaultFunction}
      RetentionInDays: 14

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # DefaultApi:
  #   Description: "API Gateway endpoint URL for Prod stage for Default function"
  #   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  DefaultFunction:
    Description: "Default Lambda Function ARN"
    Value: !GetAtt DefaultFunction.Arn
  DefaultFunctionIamRole:
    Description: "Implicit IAM Role created for Default function"
    Value: !GetAtt DefaultFunctionRole.Arn
